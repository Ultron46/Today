@model DevOps.UI.Models.User
<div class="login-content">
    <!-- Login -->
    @using (Html.BeginForm())
    {
        <h2><center>Edit</center></h2>
        <div class="nk-block toggled" id="l-register">
            <input type="hidden" id="id" name="id" value="@Model.UserId" />
            <div class="nk-form rform">
                <div class="input-group">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-user"></i></span>
                    <div class="nk-int-st">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <br />

                <div class="input-group">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-map-marker-alt"></i></span>
                    <div class="nk-int-st">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <br />

                <div class="input-group">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-flag"></i></span>
                    <div class="nk-int-st">

                        @*<input type="text" class="form-control" placeholder="Nationality" name="Nationality">*@
                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <br />

                <div class="input-group">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-mobile-alt"></i></span>
                    <div class="nk-int-st">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    </div>
                </div>
                <br />

                <div class="input-group mg-t-15">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-envelope"></i></span>
                    <div class="nk-int-st">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                    </div>
                </div>
                <br />

                <div class="input-group mg-t-15">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-unlock-alt"></i></span>
                    <div class="nk-int-st">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                    </div>
                </div>
                <br />

                <div class="input-group mg-t-15">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-calendar-alt"></i></span>
                    <div class="nk-int-st">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    </div>
                </div>
                <br />

                <div class="input-group mg-t-15">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-sitemap"></i></span>
                    <div class="nk-int-st">
                        @Html.DropDownList("OrganisationId", new SelectList(ViewBag.Organizations, "OrganisationId", "Name"), "--Select Organization--", new { @class = "udropdown" })
                    </div>
                </div>
                <br />

                <div class="input-group mg-t-15">
                    <span class="input-group-addon nk-ic-st-pro"><i class="fas fa-user-tag"></i></span>
                    <div class="nk-int-st">
                        @Html.DropDownList("RoleId", new SelectList(ViewBag.Roles, "Value", "Text"), "--Select Role--", new { @class = "udropdown" })
                    </div>
                </div>
                <br />

                <br /><br />
                <input type="submit" id="editbtn" value="Submit" class=" btn-success uloginbtn" />

                <a href="#l-login" data-ma-action="nk-login-switch" data-ma-block="#l-login" class="btn btn-login btn-success btn-float"><i class="notika-icon notika-right-arrow"></i></a>
            </div>
        </div>
    }
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    $('#editbtn').click(function (e) {
        e.preventDefault();
        var id = $('#id').val();
        var name = $('#Name').val();
        var Address = $('#Address').val();
        var Nationality = $('#Nationality').val();
        var Phone = $('#Phone').val();
        var Email = $('#Email').val();
        var Password = $('#Password').val();
        var DateOfBirth = $('#DateOfBirth').val();
        var RegistrationDate = $('#RegistrationDate').val();
        var OrganisationId = $("#OrganisationId").val();
        var RoleId = $("#RoleId").val();
        var url1 = "http://localhost:60969/api/Users/UpdateUser";
        $.ajax({
            url: url1,
            type: 'POST',//type of posting the data
            data: '{UserId: "' + id + '",Name: "' + name + '",Address: "' + Address + '",Nationality: "' + Nationality +
                '",Phone: "' + Phone + '",Email: "' + Email + '",Password: "' + Password + '",DateOfBirth: "' + DateOfBirth + '",RegistrationDate: "' + RegistrationDate + '",OrganisationId: "' + OrganisationId + '",RoleId: "' + RoleId +
                '"}',
            contentType: 'application/json',
            dataType: 'json',
            success: function (r) {
                alert('User Details Updated Successfully');
                var urlg = "http://localhost:57996/Users/Users";
                $.ajax({
                    url: urlg,
                    type: 'GET',//type of posting the data
                    contentType: 'application/json',
                    dataType: 'html',
                    success: function (r) {
                        $("#partialbody").empty();
                        $("#partialbody").append(r);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        //what to do in error
                    }
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //what to do in error
                console.log(thrownError);
            }
        });

    });
</script>